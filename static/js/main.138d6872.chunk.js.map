{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","amountOfPage","className","classNames","disabled","href","onClick","map","page","active","App","useState","setPerPage","setCurrentPage","firstItemOnPage","lastItemOnPage","min","itemsPerPage","id","value","onChange","event","target","handleChangePerPage","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAed,EAAW,EAAGW,GAEnC,OACE,mCACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBR,IAHhB,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,WACa,IAAhBV,GACFC,EAAaD,EAAc,IAPjC,oBAcDK,EAAaM,KAAI,SAAAC,GAAI,OACpB,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASZ,IAJvB,SAOE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACPT,EAAaW,IALjB,SAQGA,KAdEA,MAmBT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUR,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,WACHV,IAAgBE,GAClBD,EAAaD,EAAc,IAPjC,0BCjEGc,EAAgB,WAC3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAOhB,EAAP,KAAgBiB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBiB,EAApB,KACMC,EAAkBnB,GAAWC,EAAc,GAAK,EAChDmB,EAAiBhB,KAAKiB,IAAIrB,EAAUC,EAJ5B,IAKRqB,EAAe9B,EAAW2B,EAAiBC,GAWjD,OACE,sBACEb,UAAU,YADZ,UAGE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCkB,EADjC,cACsDC,EADtD,aAIA,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OA1BQ,SAACA,GAC3BT,GAAYS,EAAMC,OAAOH,OACzBN,EAAe,GAwBcU,CAAoBF,IAL3C,UAOE,wBAAQF,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOK,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACER,MAjDQ,GAkDRC,QAASA,EACTC,YAAaA,EACbC,aAxCmB,SAACW,GACxBK,EAAeL,MAyCb,6BACGS,EAAaV,KAAI,SAAAkB,GAAI,OACpB,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YC7DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.138d6872.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const amountOfPage = getNumbers(1, lastPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              if (currentPage !== 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {amountOfPage.map(page => (\n          <li\n            key={page}\n            className={classNames(\n              'page-item',\n              { active: page === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                onPageChange(page);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === lastPage },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage}\n            onClick={() => {\n              if (currentPage !== lastPage) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const firstItemOnPage = perPage * (currentPage - 1) + 1;\n  const lastItemOnPage = Math.min(perPage * currentPage, total);\n  const itemsPerPage = getNumbers(firstItemOnPage, lastItemOnPage);\n\n  const handleChangePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handleChangePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div\n      className=\"container\"\n    >\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => handleChangePerPage(event)}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleChangePage}\n      />\n      <ul>\n        {itemsPerPage.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}